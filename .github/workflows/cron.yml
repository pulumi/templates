name: Run Template Tests Against Latest CLI + Dev CLI
on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch: {}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULUMI_TEST_OWNER: "moolumi"
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  AWS_REGION: "us-west-2"
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
  SKIPPED_TESTS: "alicloud,digitalocean,kubernetes,openstack,equinix-metal,civo,aiven,auth0,github,yaml,oci,java-jbang,java-gradle,azuredevops"
  PULUMI_API: https://api.pulumi-staging.io
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  ARM_CLIENT_ID:  ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID:  ${{ secrets.ARM_TENANT_ID }}
  AZURE_LOCATION: westus
  TESTPARALLELISM: 10

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macOS-latest, windows-latest]
        go-version: [1.17.x]
        node-version: [14.x]
        python-version: [3.7]
        dotnet: [6.0.x]
        pulumi-version: [latest, dev]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Java 11 (temurin)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Install DotNet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - if: contains(matrix.platform, 'ubuntu') || contains(matrix.platform, 'windows')
        name: DotNet clean on windows and ubuntu
        run: |
          dotnet nuget locals all --clear
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - if: matrix.pulumi-version == 'latest'
        name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1
      - if: matrix.pulumi-version == 'dev'
        name: Get Latest Dev Version of Pulumi
        shell: bash
        run: |
          echo "DEV_PULUMI_VERSION=$(curl -sSL "http://registry.npmjs.org/-/package/@pulumi/pulumi/dist-tags" | jq -r .dev)" >> $GITHUB_ENV
      - if: matrix.pulumi-version == 'dev'
        name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1
        with:
          pulumi-version: ${{ env.DEV_PULUMI_VERSION }}
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Deps
        run: |
          pip3 install pyenv-win
          pip3 install pipenv
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: templates@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Install gotestfmt
        uses: jaxxstorm/action-install-gh-release@v1.3.1
        with:
          repo: haveyoudebuggedit/gotestfmt
      - name: Get dependencies
        run: make ensure
      - if: contains(matrix.platform, 'windows')
        name: Running Windows tests
        shell: bash
        run: |
          set -euo pipefail
          cd tests && go test -v -json -count=1 -cover -timeout 6h -parallel ${{ env.TESTPARALLELISM }} . 2>&1 | tee /tmp/gotest.log | gotestfmt
        env:
          PULUMI_PYTHON_CMD: python
          TESTPARALLELISM: 3
      - if: contains(matrix.platform, 'macOS') || contains(matrix.platform, 'ubuntu')
        name: Running non-Windows tests
        run: |
          set -euo pipefail
          cd tests && go test -v -json -count=1 -cover -timeout 6h -parallel ${{ env.TESTPARALLELISM }} . 2>&1 | tee /tmp/gotest.log | gotestfmt
      - if: 'failure()'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in ${{ matrix.platform }} template Tests
          fields: repo,commit,author,action
          status: ${{ job.status }}

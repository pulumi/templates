
# Import the program's configuration settings.
configuration:
  path:
    type: String
    default: ./www
  indexDocument:
    type: String
    default: index.html
  errorDocument:
    type: String
    default: error.html

resources:

  # Create an S3 bucket and configure it as a website.
  bucket:
    type: aws:s3:Bucket
    properties:
      acl: public-read
      website:
        indexDocument: ${indexDocument}
        errorDocument: ${errorDocument}

  # Use a synced folder to manage the files of the website.
  bucket-folder:
    type: synced-folder:index:S3BucketFolder
    properties:
      path: ${path}
      bucketName: ${bucket.bucket}
      acl: public-read

# Create a CloudFront CDN to distribute and cache the website.
  cdn:
    type: aws:cloudfront:Distribution
    properties:
      enabled: true
      origins:
        - originId: ${bucket.arn}
          domainName: ${bucket.websiteEndpoint}
          customOriginConfig:
            originProtocolPolicy: http-only
            httpPort: 80
            httpsPort: 443
            originSslProtocols:
              - TLSv1.2
      defaultCacheBehavior:
        targetOriginId: ${bucket.arn}
        viewerProtocolPolicy: redirect-to-https
        allowedMethods:
          - GET
          - HEAD
          - OPTIONS
        cachedMethods:
          - GET
          - HEAD
          - OPTIONS
        defaultTtl: 600
        maxTtl: 600
        minTtl: 600
        forwardedValues:
          queryString: true
          cookies:
            forward: all
      priceClass: PriceClass_100
      customErrorResponses:
        - errorCode: 404
          responseCode: 404
          responsePagePath: /${errorDocument}
      restrictions:
        geoRestriction:
          restrictionType: none
      viewerCertificate:
        cloudfrontDefaultCertificate: true

# Export the URLs and hostnames of the bucket and distribution.
outputs:
  originURL: http://${bucket.websiteEndpoint}
  originHostname: ${bucket.websiteEndpoint}
  cdnURL: https://${cdn.domainName}
  cdnHostname: ${cdn.domainName}
